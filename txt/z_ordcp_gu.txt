z_ordcp_gu01:--z_ordcp_gu01

declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_quatno nvarchar(30)
declare @t_contract nvarchar(30)

set @t_btggno = case when '#non'=[3] then '' else [3] end
set @t_etggno = case when '#non'=[4] then char(255) else [4] end
set @t_quatno = case when '#non' = [5] then '' else [5] end
set @t_contract = case when '#non' = [6] then '' else [6] end
--------------------------------------------------------------------------------
SET QUOTED_IDENTIFIER OFF

declare @tmp table(
	gno nvarchar(1),
	rec int,
	
	c_serial nvarchar(10),
	c_email nvarchar(100),
	c_addr1 nvarchar(max),
	c_addr2 nvarchar(max),
	c_tel nvarchar(50),
	c_fax nvarchar(50),	
	
	tggno nvarchar(20),
	tgg nvarchar(100),
	quatno nvarchar(30),
	trandate nvarchar(10),
	q_productno nvarchar(100),
	q_product nvarchar(max),
	product nvarchar(100),
	spec1 nvarchar(100),
	spec2 nvarchar(100),
	mount float,
	price float
)

insert into @tmp
select '9',ROW_NUMBER() over (order by a.tggno),e.serial,e.email,e.addr,e.addr_invo,e.tel,e.fax,
	   a.tggno,a.tgg,a.quatno,a.trandate,b.productno,REPLACE(b.product,'~#$~#$','"'),c.product,d.spec,c.spec,b.mount,b.price
from view_ordc a
left join view_ordcs b on a.noa = b.noa
left join ucas c on b.productno = c.noa
left join ucc d on b.productno = d.noa
left join acomp e on a.cno = e.noa
where (a.tggno between @t_btggno and @t_etggno) and (a.quatno is not null) and
	  (LEN(@t_quatno) = 0 or a.quatno = @t_quatno) and (LEN(@t_contract) = 0 or a.contract = @t_contract)
order by a.tggno

insert into @tmp (gno,quatno,tggno,tgg,trandate)
select '1',max(quatno),MAX(tggno),MAX(tgg),MAX(trandate) from @tmp group by quatno,tggno

insert into @tmp(gno,c_serial,c_email,c_addr1,c_addr2,c_tel,c_fax,tggno,tgg)
select '0',MAX(c_serial),MAX(c_email),MAX(c_addr1),MAX(c_addr2),MAX(c_tel),MAX(c_fax),MAX(tggno),MAX(tgg) from @tmp group by tggno

update @tmp set gno = case when product is not null then '7' else '8' end where gno = '9'
update @tmp set product = dbo.split(dbo.split(product,':',1),' ',0) where gno = '7'

update @tmp set product = q_product where gno = '8'
update @tmp set spec2 = spec1 where gno = '8'

--
declare @gno nvarchar(1)
declare @rec int
declare @tggno nvarchar(30)
declare @quatno nvarchar(30)
declare @q_productno nvarchar(30)
declare @q_product nvarchar(100)
declare @q_xproductno nvarchar(30)  
declare @product nvarchar(100)
declare @xproduct nvarchar(100)
declare @spec nvarchar(50)
declare @str nvarchar(100)
declare @cnt int
declare @max int
declare @i int
declare @no int

set @q_xproductno = 'xxxxxx'
set @xproduct = 'xxxxxx'
set @no = 0

declare cursor_table cursor for 
select gno,rec,tggno,quatno,q_productno,q_product,product from @tmp where gno = '7' or gno = '8' order by tggno
open cursor_table 
fetch next from cursor_table 
into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product
while(@@FETCH_STATUS <> -1) 
begin	
	if(@product != @xproduct)
	begin 	
		set @no = @no +1
		if (@gno = '7')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '7' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '7' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
			set @spec = (select spec2 from @tmp where gno = '7' and rec = @rec+@i and quatno = @quatno and product = @product)
			if(RIGHT(@spec,2) = 'mm' and @rec+@i != @max)
			begin
				set @spec = REPLACE(@spec,'mm','')
			end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end		
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,product,spec1)
			select '2',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@product+':',@str from @tmp where gno = '1' and quatno = @quatno and tggno = @tggno
		end	
		else if (@gno = '8')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '8' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '8' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
				set @spec = (select spec2 from @tmp where gno = '8' and rec = @rec+@i and quatno = @quatno and product = @product)
				if(RIGHt(@spec,2) = 'mm' and @rec+@i != @max)
				begin
					set @spec = REPLACE(@spec,'mm','')
				end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end					
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,spec1)
			select '2',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@str from @tmp where gno = '1' and quatno = @quatno and tggno = @tggno
		end	
		
	end
		
	set @q_xproductno = @q_productno
	set @xproduct = @product
	
	fetch next from cursor_table 
	into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product	
end 
close cursor_table 
deallocate cursor_table  

delete @tmp where gno = '7' or gno = '8'

declare @xquatno nvarchar(30)
declare @q_xproduct nvarchar(100)
declare @min int
declare @len int

set @xquatno = 'xxxxxx'
set @q_xproduct = 'xxxxxx'

declare cursor_table cursor for 
select rec,tggno,quatno,q_product from @tmp where gno = '2' order by tggno,rec
open cursor_table 
fetch next from cursor_table 
into @rec,@tggno,@quatno,@q_product 
while(@@FETCH_STATUS <> -1) 
begin
	if(@q_product != @q_xproduct)
	begin
		set @min = (select MIN(rec) from @tmp where tggno = @tggno and quatno = @quatno and q_product = @q_product)
		set @len = LEN(@q_product)	
	end
	if(@min < @rec)
	begin
		update @tmp set q_product = REPLICATE('&nbsp',@len) where tggno = @tggno and rec = @rec and quatno = @quatno and q_product = @q_product
	end
	
	set @xquatno = @quatno
	set @q_xproduct = @q_product

	fetch next from cursor_table 
	into @rec,@tggno,@quatno,@q_product
end 
close cursor_table 
deallocate cursor_table 

declare @xtggno  nvarchar(20)
set @xtggno = 'xxxxxxxxxx'

declare cursor_table cursor for 
select rec,tggno from @tmp where gno = '2' order by tggno,rec
open cursor_table 
fetch next from cursor_table 
into @rec,@tggno 
while(@@FETCH_STATUS <> -1) 
begin
	if(@tggno != @xtggno)
	begin 
		set @cnt = 0
		set @max = (select MAX(rec) from @tmp where gno = '2' and tggno = @tggno)
		insert into @tmp(gno,rec,tggno,tgg,quatno)
		select '4',@max,tggno,tgg,quatno from @tmp where gno = '2' and rec = @rec and tggno = @tggno
	end
	set @cnt = @cnt + 1
	
	if(@cnt % 30 = 0 and @rec != @max)
	begin
		insert into @tmp(gno,rec,tggno,tgg,quatno)
		select '0',@rec+1,tggno,tgg,quatno from @tmp where gno = '2' and rec = @rec and tggno = @tggno
		insert into @tmp(gno,rec,tggno,tgg,quatno)
		select '1',@rec+1,tggno,tgg,quatno from @tmp where gno = '2' and rec = @rec and tggno = @tggno
		insert into @tmp(gno,rec,tggno,tgg,quatno)
		select '3',rec,tggno,tgg,quatno from @tmp where gno = '2' and rec = @rec and tggno = @tggno
	end	
	
	set @xtggno = @tggno
	
	fetch next from cursor_table
	into @rec,@tggno
end 
close cursor_table 
deallocate cursor_table

/*insert into @tmp(gno,quatno,mount)
select '9',quatno,SUM(mount) from @tmp where gno = '2' group by quatno

declare @min int
set @xquatno = 'xxxxxxxxxxxxx'

declare cursor_table cursor for 
select rec,quatno from @tmp where gno = '2' order by quatno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno 
while(@@FETCH_STATUS <> -1) 
begin

	if(@quatno != @xquatno)
	begin
		set @min = (select MIN(rec) from @tmp where gno = '2' and quatno = @quatno)
	end
	if(@min = @rec)
	begin
		update @tmp set mount = (select mount from @tmp where gno = '9' and quatno = @quatno) where rec = @rec
	end
	else if(@min < @rec)
	begin
		update @tmp set mount = null where rec = @rec
	end

	set @xquatno = @quatno

	fetch next from cursor_table 
	into @rec,@quatno
end 
close cursor_table 
deallocate cursor_table 

delete @tmp where gno = '9'*/

select 
	gno,rec,c_serial,c_email,c_addr1,c_addr2,c_tel,c_fax,
	tggno,tgg,quatno,trandate,q_productno,q_product,product,spec1,dbo.getComma(mount,-1) mount,dbo.getComma(price,-1) price 
from @tmp order by tggno,quatno,rec,gno ;


--******************************************************************************
z_ordcp_gu02:--z_ordcp_gu02

declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_quatno nvarchar(30)
declare @t_contract nvarchar(30)

set @t_btggno = case when '#non'=[3] then '' else [3] end
set @t_etggno = case when '#non'=[4] then char(255) else [4] end
set @t_quatno = case when '#non' = [5] then '' else [5] end
set @t_contract = case when '#non' = [6] then '' else [6] end
--------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	quatno nvarchar(30),
	tggno nvarchar(100),
	tgg nvarchar(100),
	trandate nvarchar(10),
	q_productno nvarchar(100),
	q_product nvarchar(max),
	product nvarchar(100),
	spec1 nvarchar(50),
	spec2 nvarchar(50),
	price float
)

insert into @tmp
select '9',ROW_NUMBER() over (partition by a.quatno order by a.quatno,a.tggno),a.quatno,a.tggno,e.nick+'-',a.trandate,b.productno,REPLACE(b.product,'~#$~#$','"'),c.product,d.spec,c.spec,b.price
from view_ordc a
left join view_ordcs b on a.noa = b.noa
left join ucas c on b.productno = c.noa
left join ucc d on b.productno = d.noa
left join tgg e on a.tggno = e.noa  
where(a.quatno is not null) and (a.tggno between @t_btggno and @t_etggno) and
	 (LEN(@t_quatno) = 0 or a.quatno = @t_quatno) and (LEN(@t_contract) = 0 or a.contract = @t_contract)
order by a.quatno,a.tgg

insert into @tmp (gno,quatno,tggno,tgg,trandate)
select '1',max(quatno),MAX(tggno),MAX(tgg),MAX(trandate) from @tmp group by quatno,tggno

update @tmp set gno = case when product is not null then '7' else '8' end where gno = '9'
update @tmp set product = dbo.split(dbo.split(product,':',1),' ',0) where gno = '7'

update @tmp set product = q_product where gno = '8'
update @tmp set spec2 = spec1 where gno = '8'

declare @gno nvarchar(1)
declare @rec int
declare @tggno nvarchar(30)
declare @quatno nvarchar(30)
declare @xquatno nvarchar(30)
declare @q_productno nvarchar(30)
declare @q_product nvarchar(100)
declare @q_xproductno nvarchar(30)  
declare @product nvarchar(100)
declare @xproduct nvarchar(100)
declare @spec nvarchar(50)
declare @str nvarchar(100)
declare @cnt int
declare @max int
declare @i int
declare @no int

set @xquatno = 'xxxxxx'
set @q_xproductno = 'xxxxxx'
set @xproduct = 'xxxxxx'
set @no = 0

declare cursor_table cursor for 
select gno,rec,tggno,quatno,q_productno,q_product,product from @tmp where gno = '7' or gno = '8' order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product
while(@@FETCH_STATUS <> -1) 
begin	
	if(@quatno != @xquatno)
	begin
		set @no = 0
	end
	if(@product != @xproduct)
	begin 	
		set @no = @no +1
		if (@gno = '7')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '7' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '7' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
			set @spec = (select spec2 from @tmp where gno = '7' and rec = @rec+@i and quatno = @quatno and product = @product)
			if(RIGHT(@spec,2) = 'mm' and @rec+@i != @max)
			begin
				set @spec = REPLACE(@spec,'mm','')
			end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end		
			
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,product,spec1)
			select '0',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@product+':',@str from @tmp where gno = '1' and tggno = @tggno and quatno = @quatno
		end	
		else if (@gno = '8')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '8' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '8' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
				set @spec = (select spec2 from @tmp where gno = '8' and rec = @rec+@i and quatno = @quatno and product = @product)
				if(RIGHt(@spec,2) = 'mm' and @rec+@i != @max)
				begin
					set @spec = REPLACE(@spec,'mm','')
				end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end		
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,spec1)
			select '0',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@str from @tmp where gno = '1' and tggno = @tggno and quatno = @quatno
		end	
		
	end
	
	set @xquatno = @quatno
	set @q_xproductno = @q_productno
	set @xproduct = @product
	
	fetch next from cursor_table 
	into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product	
end 
close cursor_table 
deallocate cursor_table 

delete @tmp where gno = '1' or gno = '7' or gno = '8'

--
declare @q_xproduct nvarchar(100)
declare @min int
declare @len int

set @xquatno = 'xxxxxx'
set @q_xproduct = 'xxxxxx'

declare cursor_table cursor for 
select rec,quatno,q_product from @tmp order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno,@q_product 
while(@@FETCH_STATUS <> -1) 
begin
	if(@q_product != @q_xproduct)
	begin
		set @min = (select MIN(rec) from @tmp where quatno = @quatno and q_product = @q_product)
		set @len = LEN(@q_product)	
	end
	if(@min < @rec)
	begin
		update @tmp set q_product = REPLICATE('&nbsp',@len) where rec = @rec and quatno = @quatno and q_product = @q_product
	end
	
	set @xquatno = @quatno
	set @q_xproduct = @q_product

	fetch next from cursor_table 
	into @rec,@quatno,@q_product
end 
close cursor_table 
deallocate cursor_table 


declare @xtggno nvarchar(30)
set @xtggno = 'xxxxxx'

declare cursor_table cursor for 
select rec,quatno,tggno from @tmp order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno,@tggno
while(@@FETCH_STATUS <> -1) 
begin
	if(@tggno != @xtggno)
	begin
		set @min = (select MIN(rec) from @tmp where quatno = @quatno and tggno = @tggno)
	end
	if(@min < @rec)
	begin
		update @tmp set tgg = '' where rec = @rec and quatno = @quatno and tggno = @tggno
	end
	
	set @xtggno = @tggno	

	fetch next from cursor_table 
	into @rec,@quatno,@tggno
end 
close cursor_table 
deallocate cursor_table

 
 
--控制換頁
set @xquatno = 'xxxxxxxxxx'

declare cursor_table cursor for 
select rec,quatno from @tmp where gno = '0' order by quatno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno 
while(@@FETCH_STATUS <> -1) 
begin
	if(@quatno != @xquatno)
	begin 
		set @cnt = 0
		set @max = (select MAX(rec) from @tmp where gno = '0' and quatno = @quatno)
	end
	set @cnt = @cnt + 1
	if(@cnt % 30 = 0 and @rec != @max)
	begin
		insert into @tmp(gno,rec,quatno)
		select '1',rec,quatno from @tmp where rec = @rec and quatno = @quatno
	end	
	if(@rec = @max)
	begin
		insert into @tmp(gno,rec,quatno,trandate)
		select '2',rec,quatno,CONVERT(varchar(10),GETDATE(),111) from @tmp where rec = @rec and quatno = @quatno
	end
	set @xquatno = @quatno
	
	fetch next from cursor_table
	into @rec,@quatno
end 
close cursor_table 
deallocate cursor_table

select gno,rec,quatno,tgg,trandate,q_product,product,spec1,dbo.getComma(price,-1) price from @tmp order by quatno,rec,gno ;



--******************************************************************************
z_ordcp_gu03:--z_ordcp_gu03

declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_quatno nvarchar(30)
declare @t_contract nvarchar(30)

set @t_btggno = case when '#non'=[3] then '' else [3] end
set @t_etggno = case when '#non'=[4] then char(255) else [4] end
set @t_quatno = case when '#non' = [5] then '' else [5] end
set @t_contract = case when '#non' = [6] then '' else [6] end
--------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	rec int,
	quatno nvarchar(30),
	tggno nvarchar(100),
	tgg nvarchar(100),
	trandate nvarchar(10),
	q_productno nvarchar(100),
	q_product nvarchar(max),
	product nvarchar(100),
	spec1 nvarchar(50),
	spec2 nvarchar(50),
	price float
)

insert into @tmp
select '9',ROW_NUMBER() over (partition by a.quatno order by a.quatno,a.tggno),a.quatno,a.tggno,e.nick+'-',a.trandate,b.productno,REPLACE(b.product,'~#$~#$','"'),c.product,d.spec,c.spec,b.price
from view_ordc a
left join view_ordcs b on a.noa = b.noa
left join ucas c on b.productno = c.noa
left join ucc d on b.productno = d.noa
left join tgg e on a.tggno = e.noa  
where(a.quatno is not null) and (a.tggno between @t_btggno and @t_etggno) and
	 (LEN(@t_quatno) = 0 or a.quatno = @t_quatno) and (LEN(@t_contract) = 0 or a.contract = @t_contract)
order by a.quatno,a.tgg

insert into @tmp (gno,quatno,tggno,tgg,trandate)
select '1',max(quatno),MAX(tggno),MAX(tgg),MAX(trandate) from @tmp group by quatno,tggno

update @tmp set gno = case when product is not null then '7' else '8' end where gno = '9'
update @tmp set product = dbo.split(dbo.split(product,':',1),' ',0) where gno = '7'

update @tmp set product = q_product where gno = '8'
update @tmp set spec2 = spec1 where gno = '8'

declare @gno nvarchar(1)
declare @rec int
declare @tggno nvarchar(30)
declare @quatno nvarchar(30)
declare @xquatno nvarchar(30)
declare @q_productno nvarchar(30)
declare @q_product nvarchar(100)
declare @q_xproductno nvarchar(30)  
declare @product nvarchar(100)
declare @xproduct nvarchar(100)
declare @spec nvarchar(50)
declare @str nvarchar(100)
declare @cnt int
declare @max int
declare @i int
declare @no int

set @xquatno = 'xxxxxx'
set @q_xproductno = 'xxxxxx'
set @xproduct = 'xxxxxx'
set @no = 0

declare cursor_table cursor for 
select gno,rec,tggno,quatno,q_productno,q_product,product from @tmp where gno = '7' or gno = '8' order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product
while(@@FETCH_STATUS <> -1) 
begin	
	if(@quatno != @xquatno)
	begin
		set @no = 0
	end
	if(@product != @xproduct)
	begin 	
		set @no = @no +1
		if (@gno = '7')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '7' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '7' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
			set @spec = (select spec2 from @tmp where gno = '7' and rec = @rec+@i and quatno = @quatno and product = @product)
			if(RIGHT(@spec,2) = 'mm' and @rec+@i != @max)
			begin
				set @spec = REPLACE(@spec,'mm','')
			end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end		
			
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,product,spec1)
			select '2',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@product+':',@str from @tmp where gno = '1' and tggno = @tggno and quatno = @quatno
		end	
		else if (@gno = '8')
		begin
			set @cnt = (select COUNT(*) from @tmp where gno = '8' and product = @product)
			set @max = (select MAX(rec) from @tmp where gno = '8' and product = @product)
			set @i = 0
			set @str = ''
			while(@i < @cnt)
			begin
				set @spec = (select spec2 from @tmp where gno = '8' and rec = @rec+@i and quatno = @quatno and product = @product)
				if(RIGHt(@spec,2) = 'mm' and @rec+@i != @max)
				begin
					set @spec = REPLACE(@spec,'mm','')
				end
				if(@i = 0)
				begin
					set @str = @str + @spec
					set @i = @i +1	
				end	
				else
				begin	
					set @str = @str + '-' + @spec
					set @i = @i +1
				end
			end		
			insert into @tmp(gno,rec,quatno,tggno,tgg,trandate,q_productno,q_product,spec1)
			select '2',@no,quatno,tggno,tgg,trandate,@q_productno,@q_product+':',@str from @tmp where gno = '1' and tggno = @tggno and quatno = @quatno
		end	
		
	end
	
	set @xquatno = @quatno
	set @q_xproductno = @q_productno
	set @xproduct = @product
	
	fetch next from cursor_table 
	into @gno,@rec,@tggno,@quatno,@q_productno,@q_product,@product	
end 
close cursor_table 
deallocate cursor_table 

delete @tmp where gno = '1' or gno = '7' or gno = '8'

--
declare @q_xproduct nvarchar(100)
declare @min int
declare @len int

set @xquatno = 'xxxxxx'
set @q_xproduct = 'xxxxxx'

declare cursor_table cursor for 
select rec,quatno,q_product from @tmp order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno,@q_product 
while(@@FETCH_STATUS <> -1) 
begin
	if(@q_product != @q_xproduct)
	begin
		set @min = (select MIN(rec) from @tmp where quatno = @quatno and q_product = @q_product)
		set @len = LEN(@q_product)	
	end
	if(@min < @rec)
	begin
		update @tmp set q_product = REPLICATE('&nbsp',@len) where rec = @rec and quatno = @quatno and q_product = @q_product
	end
	
	set @xquatno = @quatno
	set @q_xproduct = @q_product

	fetch next from cursor_table 
	into @rec,@quatno,@q_product
end 
close cursor_table 
deallocate cursor_table 


declare cursor_table cursor for 
select rec,quatno from @tmp where gno = '2' order by quatno,rec
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno 
while(@@FETCH_STATUS <> -1) 
begin
	if(@quatno != @xquatno)
	begin 
		set @cnt = 0
		set @max = (select MAX(rec) from @tmp where gno = '2' and quatno = @quatno)
	end
	set @cnt = @cnt + 1
	if(@cnt % 30 = 0 and @rec != @max)
	begin
		insert into @tmp(gno,rec,quatno)
		select '3',rec,quatno from @tmp where rec = @rec and quatno = @quatno
	end	
	if(@rec = @max)
	begin
		insert into @tmp(gno,rec,quatno)
		select '4',rec,quatno from @tmp where rec = @rec and quatno = @quatno
	end
	set @xquatno = @quatno
	
	fetch next from cursor_table
	into @rec,@quatno
end 
close cursor_table 
deallocate cursor_table

declare @xtggno nvarchar(30)
set @xtggno = 'xxxxxx'

declare cursor_table cursor for 
select rec,quatno,tggno from @tmp order by quatno,tggno
open cursor_table 
fetch next from cursor_table 
into @rec,@quatno,@tggno
while(@@FETCH_STATUS <> -1) 
begin
	if(@tggno != @xtggno)
	begin
		set @min = (select MIN(rec) from @tmp where quatno = @quatno and tggno = @tggno)
		update @tmp set gno = '1' where rec = @rec and quatno = @quatno and tggno = @tggno
	end
	if(@min < @rec)
	begin
		update @tmp set tgg = '' where rec = @rec and quatno = @quatno and tggno = @tggno
	end
	
	set @xtggno = @tggno	

	fetch next from cursor_table 
	into @rec,@quatno,@tggno
end 
close cursor_table 
deallocate cursor_table

select gno,rec,quatno,tgg,trandate,q_product,product,spec1,dbo.getComma(price,-1) price from @tmp order by quatno,rec,gno ;